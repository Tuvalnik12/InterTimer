{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\97254\\\\Desktop\\\\vue\\\\interval-project\\\\valsTimer\\\\containers\\\\main_timer.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport BLOCKS from \"../data/blocks\";\nimport CountDown from 'react-native-countdown-component';\nimport { Card } from \"react-native-elements\";\nexport default function MainTimer() {\n  var _useState = useState(BLOCKS),\n      _useState2 = _slicedToArray(_useState, 2),\n      blocks = _useState2[0],\n      setBlocks = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentBlockId = _useState4[0],\n      setCurrentBlockId = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      didFinish = _useState6[0],\n      setDidFinish = _useState6[1];\n\n  var block = blocks.find(function (_ref) {\n    var order = _ref.order;\n    return order === currentBlockId;\n  });\n\n  var handleOnFinish = function handleOnFinish() {\n    block.order === blocks.length ? setDidFinish(true) : null;\n    setCurrentBlockId(currentBlockId + 1);\n  };\n\n  var TimerCard = function TimerCard(_ref2) {\n    var title = _ref2.title,\n        seconds = _ref2.seconds;\n    return React.createElement(Card, {\n      title: title,\n      containerStyle: styles.TimerCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, React.createElement(Timer, {\n      seconds: seconds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var Timer = function Timer(_ref3) {\n    var seconds = _ref3.seconds;\n    return React.createElement(CountDown, {\n      size: 20,\n      until: seconds,\n      onFinish: function onFinish() {\n        return handleOnFinish();\n      },\n      digitStyle: {\n        backgroundColor: '#ff0266',\n        borderWidth: 2,\n        borderColor: 'black'\n      },\n      digitTxtStyle: {\n        color: '#black'\n      },\n      timeLabelStyle: {\n        color: 'black',\n        fontWeight: 'bold'\n      },\n      separatorStyle: {\n        color: 'black'\n      },\n      timeToShow: ['M', 'S'],\n      timeLabels: {\n        m: null,\n        s: null\n      },\n      showSeparator: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return didFinish ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"FINISHED!\")) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(TimerCard, {\n    key: block.order,\n    title: block.title,\n    seconds: block.seconds,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  TimerCard: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ff0266',\n    borderColor: '#ff0266',\n    borderRadius: '10px'\n  }\n});","map":{"version":3,"sources":["C:/Users/97254/Desktop/vue/interval-project/valsTimer/containers/main_timer.js"],"names":["React","useState","BLOCKS","CountDown","Card","MainTimer","blocks","setBlocks","currentBlockId","setCurrentBlockId","didFinish","setDidFinish","block","find","order","handleOnFinish","length","TimerCard","title","seconds","styles","Timer","backgroundColor","borderWidth","borderColor","color","fontWeight","m","s","StyleSheet","create","display","justifyContent","alignItems","borderRadius"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {StyleSheet, View, Text} from 'react-native';\r\nimport BLOCKS from '../data/blocks'\r\nimport CountDown from 'react-native-countdown-component';\r\nimport {Card} from \"react-native-elements\";\r\n\r\nexport default function MainTimer() {\r\n  const [blocks, setBlocks] = useState(BLOCKS);\r\n  const [currentBlockId, setCurrentBlockId] = useState(1);\r\n  const [didFinish, setDidFinish] = useState(false);\r\n  const block = blocks.find(({order}) => order === currentBlockId);\r\n\r\n  const handleOnFinish = () => {\r\n    block.order === blocks.length ? setDidFinish(true) : null;\r\n    setCurrentBlockId(currentBlockId + 1);\r\n  };\r\n\r\n  const TimerCard = ({title, seconds}) => {\r\n    return (\r\n      <Card title={title} containerStyle={styles.TimerCard}>\r\n        <Timer seconds={seconds}/>\r\n      </Card>\r\n    )\r\n  };\r\n\r\n  const Timer = ({seconds}) => {\r\n    return (\r\n      <CountDown\r\n        size={20}\r\n        until={seconds}\r\n        onFinish={() => handleOnFinish()}\r\n        digitStyle={{backgroundColor: '#ff0266', borderWidth: 2, borderColor: 'black'}}\r\n        digitTxtStyle={{color: '#black'}}\r\n        timeLabelStyle={{color: 'black', fontWeight: 'bold'}}\r\n        separatorStyle={{color: 'black'}}\r\n        timeToShow={['M', 'S']}\r\n        timeLabels={{m: null, s: null}}\r\n        showSeparator\r\n      />\r\n    )\r\n  };\r\n\r\n  return (\r\n    didFinish ?\r\n      (\r\n        <View>\r\n          <Text>\r\n            FINISHED!\r\n          </Text>\r\n        </View>\r\n      ) : (\r\n        <View>\r\n          <TimerCard key={block.order} title={block.title} seconds={block.seconds}/>\r\n        </View>\r\n      )\r\n  )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  TimerCard: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#ff0266',\r\n    borderColor: '#ff0266',\r\n    borderRadius: '10px',\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}