{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\97254\\\\Desktop\\\\vue\\\\interval-project\\\\valsTimer\\\\containers\\\\main_timer.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport _ from 'lodash';\nimport CountDown from 'react-native-countdown-component';\nimport { Card } from \"react-native-elements\";\nexport default function MainTimer(_ref) {\n  var timers = _ref.timers;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      startTimer = _useState2[0],\n      nextTimer = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      timerNumber = _useState4[0],\n      addTimerNumber = _useState4[1];\n\n  var startNextTimer = function startNextTimer() {\n    nextTimer(!startTimer);\n  };\n\n  var nextTimerNum = function nextTimerNum(n) {\n    addTimerNumber(timerNumber = n);\n  };\n\n  var TimerCard = function TimerCard(_ref2) {\n    var title = _ref2.title,\n        seconds = _ref2.seconds;\n    return React.createElement(Card, {\n      title: title,\n      containerStyle: styles.TimerCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, React.createElement(Timer, {\n      seconds: seconds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var Timer = function Timer(_ref3) {\n    var seconds = _ref3.seconds;\n    return React.createElement(CountDown, {\n      size: 20,\n      until: seconds,\n      onFinish: function onFinish() {\n        return startNextTimer();\n      },\n      digitStyle: {\n        backgroundColor: '#ff0266',\n        borderWidth: 2,\n        borderColor: 'black'\n      },\n      digitTxtStyle: {\n        color: '#black'\n      },\n      timeLabelStyle: {\n        color: 'black',\n        fontWeight: 'bold'\n      },\n      separatorStyle: {\n        color: 'black'\n      },\n      timeToShow: ['M', 'S'],\n      timeLabels: {\n        m: null,\n        s: null\n      },\n      showSeparator: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    });\n  };\n\n  if (startTimer) {\n    var timer = timers[timerNumber];\n    conole.log(timer);\n    nextTimerNum(timerNumber + 1);\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, React.createElement(TimerCard, {\n      key: order,\n      title: title,\n      seconds: seconds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nvar styles = StyleSheet.create({\n  TimerCard: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ff0266',\n    borderColor: '#ff0266',\n    borderRadius: '10px'\n  }\n});","map":{"version":3,"sources":["C:/Users/97254/Desktop/vue/interval-project/valsTimer/containers/main_timer.js"],"names":["React","useState","_","CountDown","Card","MainTimer","timers","startTimer","nextTimer","timerNumber","addTimerNumber","startNextTimer","nextTimerNum","n","TimerCard","title","seconds","styles","Timer","backgroundColor","borderWidth","borderColor","color","fontWeight","m","s","timer","conole","log","order","StyleSheet","create","display","justifyContent","alignItems","borderRadius"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\nimport _ from 'lodash';\r\nimport CountDown from 'react-native-countdown-component';\r\nimport {Card} from \"react-native-elements\";\r\n\r\nexport default function MainTimer({timers}) {\r\n  let [startTimer, nextTimer] = useState(true);\r\n  let [timerNumber, addTimerNumber] = useState(0);\r\n\r\n  const startNextTimer = () => {\r\n    nextTimer(!startTimer)\r\n  };\r\n\r\n  const nextTimerNum = (n) => {\r\n    addTimerNumber(timerNumber = n)\r\n  };\r\n\r\n  const TimerCard = ({title, seconds}) => {\r\n    return (\r\n      <Card title={title} containerStyle={styles.TimerCard}>\r\n        <Timer seconds={seconds}/>\r\n      </Card>\r\n    )\r\n  };\r\n\r\n  const Timer = ({seconds}) => {\r\n    return (\r\n      <CountDown\r\n        size={20}\r\n        until={seconds}\r\n        onFinish={() => startNextTimer()}\r\n        digitStyle={{backgroundColor: '#ff0266', borderWidth: 2, borderColor: 'black'}}\r\n        digitTxtStyle={{color: '#black'}}\r\n        timeLabelStyle={{color: 'black', fontWeight: 'bold'}}\r\n        separatorStyle={{color: 'black'}}\r\n        timeToShow={['M', 'S']}\r\n        timeLabels={{m: null, s: null}}\r\n        showSeparator\r\n      />\r\n    )\r\n  };\r\n\r\n  if (startTimer) {\r\n    const timer = timers[timerNumber];\r\n    conole.log(timer)\r\n    nextTimerNum(timerNumber + 1);\r\n    return (\r\n      <View>\r\n        <TimerCard key={order} title={title} seconds={seconds}/>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  TimerCard: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#ff0266',\r\n    borderColor: '#ff0266',\r\n    borderRadius: '10px',\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}