{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\97254\\\\Desktop\\\\vue\\\\interval-project\\\\valsTimer\\\\containers\\\\main_timer.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CountDown from 'react-native-countdown-component';\nimport { Card } from \"react-native-elements\";\nexport default function MainTimer(_ref) {\n  var timers = _ref.timers;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentTimer = _useState2[0],\n      nextCurrentTimer = _useState2[1];\n\n  var nextTimer = function nextTimer() {\n    nextCurrentTimer(currentTimer++);\n  };\n\n  var TimerCard = function TimerCard(_ref2) {\n    var title = _ref2.title,\n        seconds = _ref2.seconds;\n    return React.createElement(Card, {\n      title: title,\n      containerStyle: styles.TimerCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, React.createElement(Timer, {\n      seconds: seconds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var Timer = function Timer(props) {\n    var seconds = props.seconds;\n    return React.createElement(CountDown, {\n      size: 20,\n      until: seconds,\n      onFinish: function onFinish() {\n        return nextTimer();\n      },\n      digitStyle: {\n        backgroundColor: '#ff0266',\n        borderWidth: 2,\n        borderColor: 'black'\n      },\n      digitTxtStyle: {\n        color: '#black'\n      },\n      timeLabelStyle: {\n        color: 'black',\n        fontWeight: 'bold'\n      },\n      separatorStyle: {\n        color: 'black'\n      },\n      timeToShow: ['M', 'S'],\n      timeLabels: {\n        m: null,\n        s: null\n      },\n      showSeparator: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, timers.map(function (timer, i) {\n    if (currentTimer === i) {\n      return React.createElement(TimerCard, {\n        title: timer.title,\n        seconds: timer.seconds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      });\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  TimerCard: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ff0266',\n    borderColor: '#ff0266',\n    borderRadius: '10px'\n  }\n});","map":{"version":3,"sources":["C:/Users/97254/Desktop/vue/interval-project/valsTimer/containers/main_timer.js"],"names":["React","useState","CountDown","Card","MainTimer","timers","currentTimer","nextCurrentTimer","nextTimer","TimerCard","title","seconds","styles","Timer","props","backgroundColor","borderWidth","borderColor","color","fontWeight","m","s","map","timer","i","StyleSheet","create","display","justifyContent","alignItems","borderRadius"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAAQC,IAAR,QAAmB,uBAAnB;AAEA,eAAe,SAASC,SAAT,OAA6B;AAAA,MAATC,MAAS,QAATA,MAAS;;AAAA,kBAEHJ,QAAQ,CAAC,CAAD,CAFL;AAAA;AAAA,MAErCK,YAFqC;AAAA,MAEvBC,gBAFuB;;AAI1C,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBD,IAAAA,gBAAgB,CAACD,YAAY,EAAb,CAAhB;AACD,GAFD;;AAIA,MAAMG,SAAS,GAAG,SAAZA,SAAY,QAAsB;AAAA,QAApBC,KAAoB,SAApBA,KAAoB;AAAA,QAAbC,OAAa,SAAbA,OAAa;AACtC,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,KAAb;AAAoB,MAAA,cAAc,EAAEE,MAAM,CAACH,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEE,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GAND;;AAQA,MAAME,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,QAChBH,OADgB,GACLG,KADK,CAChBH,OADgB;AAEvB,WACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,KAAK,EAAEA,OAFT;AAGE,MAAA,QAAQ,EAAE;AAAA,eAAMH,SAAS,EAAf;AAAA,OAHZ;AAIE,MAAA,UAAU,EAAE;AAACO,QAAAA,eAAe,EAAE,SAAlB;AAA6BC,QAAAA,WAAW,EAAE,CAA1C;AAA6CC,QAAAA,WAAW,EAAE;AAA1D,OAJd;AAKE,MAAA,aAAa,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OALjB;AAME,MAAA,cAAc,EAAE;AAACA,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,UAAU,EAAE;AAA7B,OANlB;AAOE,MAAA,cAAc,EAAE;AAACD,QAAAA,KAAK,EAAE;AAAR,OAPlB;AAQE,MAAA,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,CARd;AASE,MAAA,UAAU,EAAE;AAACE,QAAAA,CAAC,EAAE,IAAJ;AAAUC,QAAAA,CAAC,EAAE;AAAb,OATd;AAUE,MAAA,aAAa,MAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAcD,GAhBD;;AAkBA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,MAAM,CAACiB,GAAP,CAAW,UAACC,KAAD,EAAQC,CAAR,EAAc;AACxB,QAAIlB,YAAY,KAAKkB,CAArB,EAAwB;AACtB,aACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAED,KAAK,CAACb,KAAxB;AAA+B,QAAA,OAAO,EAAEa,KAAK,CAACZ,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;AACF,GANA,CADH,CADF;AAWD;AAED,IAAMC,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/BjB,EAAAA,SAAS,EAAE;AACTkB,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITd,IAAAA,eAAe,EAAE,SAJR;AAKTE,IAAAA,WAAW,EAAE,SALJ;AAMTa,IAAAA,YAAY,EAAE;AANL;AADoB,CAAlB,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\nimport CountDown from 'react-native-countdown-component';\r\nimport {Card} from \"react-native-elements\";\r\n\r\nexport default function MainTimer({timers}) {\r\n\r\n  let [currentTimer, nextCurrentTimer] = useState(1);\r\n\r\n  const nextTimer = () => {\r\n    nextCurrentTimer(currentTimer++)\r\n  };\r\n\r\n  const TimerCard = ({title, seconds}) => {\r\n    return (\r\n      <Card title={title} containerStyle={styles.TimerCard}>\r\n        <Timer seconds={seconds}/>\r\n      </Card>\r\n    )\r\n  };\r\n\r\n  const Timer = (props) => {\r\n    const {seconds} = props;\r\n    return (\r\n      <CountDown\r\n        size={20}\r\n        until={seconds}\r\n        onFinish={() => nextTimer()}\r\n        digitStyle={{backgroundColor: '#ff0266', borderWidth: 2, borderColor: 'black'}}\r\n        digitTxtStyle={{color: '#black'}}\r\n        timeLabelStyle={{color: 'black', fontWeight: 'bold'}}\r\n        separatorStyle={{color: 'black'}}\r\n        timeToShow={['M', 'S']}\r\n        timeLabels={{m: null, s: null}}\r\n        showSeparator\r\n      />\r\n    )\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      {timers.map((timer, i) => {\r\n        if (currentTimer === i) {\r\n          return (\r\n            <TimerCard title={timer.title} seconds={timer.seconds}/>\r\n          )\r\n        }\r\n      })}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  TimerCard: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#ff0266',\r\n    borderColor: '#ff0266',\r\n    borderRadius: '10px',\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}